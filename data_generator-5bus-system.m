%% Admittance matrix (Ybus) calculation
% Series impedance R+jX (p.u)
clear; clc;
syms s d z22 z33 z44 z55

%% Values substitutions
L=500e-6; C=200e-6; rl=1e-3; rc=1e-3;

% Line impedances
z12 = 0.32+s*2.5465*1e-3;
z13 = 1.28+s*10.1859*1e-3;
z23 = 0.96+s*7.6394*1e-3;
z24 = 0.96+s*7.6394*1e-3;
z25 = 0.64+s*5.093*1e-3;
z34 = 0.16+s*1.2732*1e-3;
z45 = 1.28+s*10.1859*1e-3;

% bus loads range variations
% z22 = 20+s*10/(2*pi*60);
% z33 = 45+s*15/(2*pi*60);
% z44 = 40+s*5/(2*pi*60);
% z55 = 60+s*10/(2*pi*60);
R_load2 = linspace(1,10,5);
L_load2 = linspace(1,10,5)/(2*pi*60);
R_load3 = linspace(1,10,5);
L_load3 = linspace(1,10,5)/(2*pi*60);
R_load4 = linspace(1,10,5);
L_load4 = linspace(1,10,5)/(2*pi*60);
R_load5 = linspace(1,10,5);
L_load5 = linspace(1,10,5)/(2*pi*60);

% Line charging Y/2 (p.u)
y12_c = 4.9736*1e-6*s;
y13_c = 4.1447*1e-6*s;
y23_c = 3.3157*1e-6*s;
y24_c = 3.3157*1e-6*s;
y25_c = 2.4868*1e-6*s;
y34_c = 1.6579*1e-6*s;
y45_c = 4.1447*1e-6*s;

% bus admittance
y11 = 0;
y22 = 1/z22;
y33 = 1/z33;
y44 = 1/z44;
y55 = 1/z55;
y12 = 1/z12;
y13 = 1/z13;
y14 = 0;
y15 = 0;
y23 = 1/z23;
y24 = 1/z24;
y25 = 1/z25;
y34 = 1/z34;
y35 = 0;
y45 = 1/z45;

% PV parameters
zpv = ((s*rc+1/C)*(s+rl/L+(rc*d*(1-d)/L)))/(s^2+s/L*(rc+rl-rc*d)+1/(L*C)*(1-d)^2);
zboost = zpv; % Assuming the observer-side converter is boost converter
ypv = 1/zpv;

%% Admittance calculations
Y11 = y11+y12+y13+y12_c+y13_c;
Y22 = y22+ypv+y12+y23+y24+y25+y12_c+y23_c+y24_c+y25_c;
Y33 = y33+y13+y23+y34+y13_c+y23_c+y34_c;
Y44 = y44+y24+y34+y45+y24_c+y34_c+y45_c;
Y55 = y55+y25+y45+y25_c+y45_c;

Ybus = [Y11 -y12 -y13 -y14 -y15;
        -y12 Y22 -y23 -y24 -y25;
        -y13 -y23 Y33 -y34 -y35;
        -y14 -y24 -y34 Y44 -y45;
        -y15 -y25 -y35 -y45 Y55];

Zbus = inv(Ybus);
Z_net = Zbus(1,1)-zboost;
pretty(Z_net)

%% Data collection
m = 0;
n = 0;
w = logspace(1,5,100);
D = [0.2,0.4,0.5,0.6,0.8];

%% Non-faulty conditions
total_itr=length(D)*length(R_load2)^4;
for h=1:length(D)
    d = D(h);
    for i=1:length(R_load2)
        z22 = R_load2(i)+s*L_load2(i);
        for j=1:length(R_load3)
            z33 = R_load3(j)+s*L_load3(j);
            for k=1:length(R_load4)
                z44 = R_load4(k)+s*L_load4(k);
                for l=1:length(R_load5)
                    z55 = R_load5(l)+s*L_load5(l);
                    m = m + 1;
                    fprintf('Loop: %d/%d\n',m,total_itr);
                    
                    y = subs(Z_net);
                    [nf, df] = numden(y);
                    tfn = sym2poly(nf);
                    tfd = sym2poly(df);
            
                    sys = tf(tfn, tfd);
                    [mag,phase,wout] = bode(sys,w);
                    myArr{1,m} = 20*log(reshape(mag, length(mag),1));
                    myArr{2,m} = reshape(phase, length(phase), 1);
                    myArr{3,m} = wout;
                    myArr{4,m} = d;
                    myArr{5,m} = R_load2(i);
                    myArr{6,m} = L_load2(i);
                    myArr{7,m} = R_load3(j);
                    myArr{8,m} = L_load3(j);
                    myArr{9,m} = R_load4(k);
                    myArr{10,m} = L_load4(k);
                    myArr{11,m} = R_load5(l);
                    myArr{12,m} = L_load5(l);
                end
            end
        end
    end
end
healthy_cases = m;

%% Healthy data
freq_arr = transpose(myArr{3,1});
mag_mat   = zeros(length(w),healthy_cases);
phase_mat = zeros(length(w),healthy_cases);
final_data = zeros(healthy_cases, 2*length(w)+9);
d_arr = zeros(healthy_cases,1);
R2_arr = zeros(healthy_cases,1);
L2_arr = zeros(healthy_cases,1);
R3_arr = zeros(healthy_cases,1);
L3_arr = zeros(healthy_cases,1);
R4_arr = zeros(healthy_cases,1);
L4_arr = zeros(healthy_cases,1);
R5_arr = zeros(healthy_cases,1);
L5_arr = zeros(healthy_cases,1);
health_arr = [];

for m=1:healthy_cases
    mag_mat(:,m)   = myArr{1,m};
    phase_mat(:,m) = myArr{2,m};
    d_arr(m) = myArr{4,m};
    R2_arr(m) = myArr{5,m};
    L2_arr(m) = myArr{6,m};
    R3_arr(m) = myArr{7,m};
    L3_arr(m) = myArr{8,m};
    R4_arr(m) = myArr{9,m};
    L4_arr(m) = myArr{10,m};
    R5_arr(m) = myArr{11,m};
    L5_arr(m) = myArr{12,m};
end

mag_mat = transpose(mag_mat);
phase_mat = transpose(phase_mat);

% creating final data file
final_data(:,1:100) = mag_mat;
final_data(:,101:200) = phase_mat;
final_data(:,201:209) = [d_arr R2_arr L2_arr R3_arr L3_arr R4_arr L4_arr R5_arr L5_arr];

dataFile = 'Hdata_5bus.xlsx';
writematrix(freq_arr,dataFile,'Sheet','Freq');
writematrix(mag_mat,dataFile,'Sheet','Magnitude');
writematrix(phase_mat,dataFile,'Sheet','Phase');
writematrix(final_data,dataFile,'Sheet','final_data');
fprintf('Healthy data saved as CSV file.\n')

%%
mypha = [
    724.4559001	724.3869233	724.3114005	724.1565862	722.0928936
724.8880206	724.811882	724.7282813	724.5562945	722.2333066
725.3615298	725.2773927	725.1847007	724.9932127	722.3686382
725.8802273	725.7871303	725.6841644	725.4704173	722.4932701
726.4482094	726.345041	726.2304117	725.9911165	722.5998543
727.069875	726.955342	726.8274055	726.5586132	722.6789797
727.7499262	727.6225143	727.4793126	727.1762527	722.7188378
728.4933598	728.3512842	728.1904705	727.8473486	722.7049203
729.3054478	729.1465923	728.9653374	728.5750835	722.6197944
730.1917029	730.0135436	729.8084197	729.3623783	722.4430108
731.1578246	730.957336	730.724174	730.2117259	722.1512127
732.20962	731.983161	731.7168764	731.1249845	721.7185078
733.3528955	733.0960711	732.790455	732.1031284	721.1171561
734.5933115	734.3008087	733.9482816	733.1459576	720.3186019
735.9361952	735.6015925	735.192921	734.2517739	719.2948336
737.3863066	737.0018581	736.5258394	735.4170365	718.0200115
738.947557	738.5039575	737.9470815	736.636024	716.4722509
740.6226797	740.1088218	739.4549322	737.9005387	714.6354057
742.4128646	741.8156075	741.0455906	739.1996999	712.5006747
744.317372	743.6213499	742.7128936	740.5198827	710.067848
746.3331553	745.5206633	744.4481395	741.8448598	707.3460322
748.4545306	747.505535	746.2400657	743.1561915	704.3537388
750.6729423	749.5652668	748.0750326	744.433892	701.118282
752.9768774	751.6866135	749.937456	745.6573601	697.6745118
755.3519774	753.8541575	751.8105	746.80652	694.0629867
757.7813807	756.0509277	753.6770064	747.863074	690.3277644
760.2463026	758.2592373	755.5205917	748.8117288	686.5140321
762.7268228	760.4616699	757.3268005	749.6412383	682.6658163
765.2028124	762.6421089	759.0841719	750.3451051	678.8239809
767.6549018	764.7866758	760.7850703	750.9218083	675.0246708
770.0653761	766.8844469	762.4261415	751.3744602	671.2982755
772.4188882	768.9278379	764.008302	751.709847	667.6689192
774.7029092	770.9125918	765.536222	751.9368508	664.1544122
776.9078797	772.837371	767.0173353	752.0642802	660.7665631
779.0270706	774.703013	768.4604737	752.0981382	657.511726
781.0562141	776.5115707	769.8742751	752.0383115	654.3914528
782.9929905	778.2652854	771.265542	751.8745534	651.4031205
784.836471	779.9656503	772.6377205	751.5814257	648.5403904
786.5866067	781.6126885	773.9896261	751.1114964	645.7933155
788.2438278	783.2045208	775.3144634	750.3854329	643.1477836
789.8087799	784.7372261	776.5990772	749.2764359	640.5836226
791.2821929	786.2049376	777.8232317	747.5842334	638.0695176
792.6648506	787.6000597	778.9585253	744.9898775	635.54795
793.9576163	788.9134618	779.966253	740.9769074	632.8716085
795.16147	790.1344769	780.7929763	734.7057749	629.1340519
796.2775169	791.2504984	781.361318	724.8966157	451.2861335
797.3069404	792.2458841	781.5504244	710.1506662	446.329005
798.2508737	793.09965	781.1519337	690.8431023	442.1102972
799.1101624	793.7808895	779.7599242	671.2357661	436.1772646
799.8849725	794.2394347	776.4496042	655.7614827	425.5530414
800.574145	794.3853068	768.6084223	644.8731789	402.3241829
801.1740874	794.0377765	746.5977628	636.6840445	362.878309
801.6767284	792.7752606	690.3919616	605.2098673	343.375168
802.0653889	789.359103	651.3384744	435.4781998	364.18007
802.3055065	778.2168869	634.5750655	365.0319882	413.8350391
802.3208604	710.7355168	430.4429997	346.9713096	434.4506768
801.9209113	642.0257083	339.9287627	420.6954317	441.205838
800.5142413	361.8373032	419.7898833	439.7250987	444.0104194
795.4013534	419.6832407	441.1742644	444.1276547	445.39804
759.7742879	442.4840375	445.0051532	445.7399241	446.1747535
436.5904172	445.7192297	446.2759936	446.4961518	446.6507616
445.1027794	446.6945576	446.8424897	446.9098029	446.9607464
446.7964894	447.1044432	447.1401298	447.1559985	447.1663904
447.2598344	447.303104	447.303029	447.2999683	447.2934753
447.4131379	447.3839338	447.370019	447.3584708	447.3432303
447.4125711	447.348675	447.3247517	447.3058817	447.2817743
447.1973988	447.075009	447.0294391	446.9933422	446.9469105
445.8777568	445.3804412	445.1853224	445.0265351	444.8165237
418.7178288	420.3972059	421.032538	421.5261495	422.1431798
445.2052969	445.1495614	445.1301626	445.1151964	445.0963983
443.2499739	443.2141287	443.2011877	443.1910317	443.178056
327.2457092	326.8169326	326.6603981	326.5368996	326.3782853
278.0805163	277.9726065	277.9334548	277.9026575	277.863223
272.1536085	272.145064	272.1418923	272.1393698	272.136104
271.0931955	271.0907537	271.0898361	271.089102	271.0881456
270.6546278	270.6537019	270.6533506	270.6530682	270.6526983
270.4263288	270.4259668	270.4258282	270.4257162	270.4255688
270.3066806	270.3065612	270.3065149	270.3064773	270.3064274
271.8657202	271.8648598	271.8645283	271.8642596	271.8639049
270.16805	270.1681108	270.168134	270.1681527	270.168177
270.0996659	270.0997681	270.0998075	270.0998393	270.0998811
270.0668548	270.0669705	270.0670153	270.0670516	270.0670995
270.0448288	270.0449477	270.0449938	270.0450312	270.0450807
270.028964	270.0290806	270.0291259	270.0291628	270.0292116
270.0171323	270.0172438	270.0172872	270.0173226	270.0173695
270.0080588	270.0081638	270.0082048	270.0082381	270.0082825
270.0009026	270.0010005	270.0010388	270.00107	270.0011114
269.9950828	269.9951735	269.995209	269.995238	269.9952765
269.9901861	269.9902699	269.9903026	269.9903294	269.9903649
269.9859121	269.9859891	269.9860192	269.9860439	269.9860766
269.9820377	269.9821083	269.982136	269.9821586	269.9821887
269.9783941	269.9784588	269.9784842	269.9785049	269.9785325
269.9748508	269.97491	269.9749332	269.9749522	269.9749774
269.9713039	269.971358	269.9713792	269.9713966	269.9714197
269.9676687	269.9677181	269.9677375	269.9677534	269.9677745
269.9638735	269.9639187	269.9639364	269.9639509	269.9639702
269.9598556	269.9598968	269.9599129	269.9599262	269.9599438
269.9555576	269.9555952	269.95561	269.955622	269.9556381
269.9509257	269.95096	269.9509734	269.9509845	269.9509991
269.9459071	269.9459384	269.9459506	269.9459607	269.9459741
];

%%
[r, c] = size(mypha);
phase_ang = zeros(r,c);
for i=1:r
    for j=1:c
       phase_ang(i,j) = mod(mypha(i,j), 360);
    end
end

